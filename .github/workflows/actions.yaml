name: Actions

on:
    workflow_dispatch:

jobs:
    # usage of actions
    test_actions:
        runs-on: ubuntu-latest
        steps:
            - name: check out repo
              uses: actions/checkout@v4.2.2
              with: 
                name: "Ahmed"

    # run a specific step inside container
    test_runers:
        runs-on: ubuntu-latest
        steps:
            - name: run in ubuntu VM
              run: echo "Hello from VM"

            - name: run iside container
              uses: docker://alpine:3.12  # this image must be avilable on docker hub without auth
              with:
                entrypoint: /bin/sh
                args: |
                  -c echo "Hello from container"
                    
            - name: run iside VM
              run: echo "Back to VM"    

    # use a private image and give credentials
    # all the job will run inside container         
    job_inside_container:
        runs-on: ubuntu:latest
        container:
            image: adham00/frontend:v1.0
            credentials:
                username: ${{secrets.DOCKER_USERNAME}}
                password: ${{secrets.DOCKER_PASSWORD}}   
        steps: 
            - name: test
              run: npm --version 
              
              
    # fail-fast: false -> if a job fails, dependent jobs still run and workflow continues
    # test_strategy: defines a matrix job that runs on multiple OS and Node versions
    # max-parallel: 3 -> only 3 jobs run at the same time
    # matrix: defines combinations of OS and Node versions
    # runs-on: uses the OS from the current matrix combination
    # Uses when we want to test on multiable Envs 
    test_strategy:
        strategy:
              fail-fast: false
              max-parallel: 3
              matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                node-versions: [14.x ,15.x ,16.x ]
                #python-versions: [3.8, 3.9, 3.10]
        runs-on: ${{matrix.os}}
        steps:
            - name: install nodejs
              uses: actions/setup-node@v3.6.0
              with:
                node-version: ${{matrix.node-versions}}
            - name: test
              run: npm --version

